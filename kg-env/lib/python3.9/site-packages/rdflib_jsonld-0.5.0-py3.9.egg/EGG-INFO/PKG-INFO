Metadata-Version: 1.2
Name: rdflib-jsonld
Version: 0.5.0
Summary: rdflib extension adding JSON-LD parser and serializer
Home-page: https://github.com/RDFLib/rdflib-jsonld
Maintainer: RDFLib Team
Maintainer-email: rdflib-dev@google.com
License: BSD
Description: RDFLib plugin providing JSON-LD parsing and serialization
        =========================================================
        
        This is an implementation of `JSON-LD <http://www.w3.org/TR/json-ld/>`_
        for `RDFLib <https://github.com/RDFLib/rdflib>`_.
        For more information about this technology, see the `JSON-LD website <http://json-ld.org/>`_.
        
        This implementation will:
        
        - read in an JSON-LD formatted document and create an RDF graph
        - serialize an RDF graph to JSON-LD formatted output
        
        
        Installation
        ------------
        
        The easiest way to install the RDFLib JSON-LD plugin is directly from PyPi using pip by running the command below:
        
        .. code-block:: shell
        
            pip install rdflib-jsonld
            
        
        
        Otherwise you can download the source and install it directly by running:
        
        .. code-block:: shell
        
            python setup.py install
            
        
        
        
        Using the plug-in JSONLD serializer/parser with RDFLib
        ------------------------------------------------------
        
        The plugin parser and serializer are automatically registered if installed by
        setuptools.
        
        .. code-block:: python
        
            >>> from rdflib import Graph, plugin
            >>> from rdflib.serializer import Serializer
            
            >>> testrdf = '''
            ... @prefix dc: <http://purl.org/dc/terms/> .
            ... <http://example.org/about>
            ...     dc:title "Someone's Homepage"@en .
            ... '''
            
            >>> g = Graph().parse(data=testrdf, format='n3')
            
            >>> print(g.serialize(format='json-ld', indent=4))
            {
                "@id": "http://example.org/about",
                "http://purl.org/dc/terms/title": [
                    {
                        "@language": "en",
                        "@value": "Someone's Homepage"
                    }
                ]
            }
            
            >>> context = {"@vocab": "http://purl.org/dc/terms/", "@language": "en"}
            >>> print(g.serialize(format='json-ld', context=context, indent=4))
            {
                "@context": {
                    "@language": "en",
                    "@vocab": "http://purl.org/dc/terms/"
                },
                "@id": "http://example.org/about",
                "title": "Someone's Homepage"
            }
            
        
        
        
Platform: any
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: License :: OSI Approved :: BSD License
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Operating System :: OS Independent
Classifier: Natural Language :: English
